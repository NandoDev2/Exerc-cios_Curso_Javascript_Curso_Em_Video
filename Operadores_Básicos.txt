///////////////////////////////////////////////////////////////////////////////////////

Tipos de Operadores
(os mais básicos)
-> Aritiméticos
-> Atribuição
-> Relacionais
-> Lógicos
-> Ternais

---------------------------------------------------------------------------------------

Operadores Aritiméticos

  + -> Realiza a soma entre dois valores
  - -> Realiza a subtração entre dois valores
  * -> Realiza a multiplicação entre dois valores
  / -> Realiza a divisão entre dois valores
  % -> Resto de uma divisão inteira, por exemplo 5%2 = 1
 ** -> Realiza a exponênciação, sendo o primeiro número a base e o segundo a potência

//////////////////////////////////////////////////////////////////////////////////////

Ordem de Precedência nos Operadores Aritiméticos

() -> ao colocar os parênteses dá-se prioridade máxima
** -> Logo após vem a exponenciação
* / % -> Todos eles possuem a mesma posição de precedência. Mas se mais de um aparecer nas mesma expresão? A ordem será da esquerda para a direita, quem for aparecendo primeiro na expressão.
+ - ->    

///////////////////////////////////////////////////////////////////////////////////////

Exemplos

var a = 5 + 3  | A variável será 8
var b = a % 5  | O resto da divisão inteira de 8 por 5 é 3. Portando a variável será 3
var c = 5*b**2 | Como a precedência é da exponenciação, a variável será 45
var d = 10 - a/2 |Como a precedência é da divisão, a variável será 6
var e = 6*2/d  |Como a precedência é de quem aparecer primeiro, da esquerda para a direita a variável será 2
var f = b%e + 4/e | Na ordem será feita a primeira operação, a terceira pera precedência, e por ultimo serão somados os dois valores resultantes.

-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
OPERADORES DE ATRIBUIÇÃO
Auto-Atribuição

var n = 3
n = n + 4    -> Logo a variável passa a valer 7
n = n - 5    -> O n que antes valia 7, passa a valer 2
PODE SER FEITO COM QUAISQUER OPERAÇÔES ARITMÉTICAS

É possível reescrever as expressões acima de maneira encurtada

n + = 4   ->> É igual a escrever (n = n + 4 )
n - = 5   ->> É igual a escrever (n = n - 5)

/////////////////////////////////////////////////////////////////////////////////////

Incremento

 Com frequência se usa o incremento de 1 durante uma Auto-Atribuição de variável. Por exemplo:

 var x = 5 
 x = x + 1  ->> x + = 1
 x = x - 1  ->> x - = 1

Note que ao lado está a simplificação já conhecida da auto atribuição
Devido á frequência do uso do 1 na auto atribuição, foi criada uma maneira mais simplificada para expressar.

var x = 5
x = x + 1 ->> x + = 1 ->> x++
x = x - 1 ->> x - = 1 ->> x--

-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
OPERADORES RELACIONAIS

 >   | Maior que
 <   | Menor que
 >=  | Maior ou igual que
 <=  | Menor ou igual que
 ==  | Igual
 !=  | Diferente

 São comparados dois valores, e o resultado será true ou false

 Exemplos:

 5>2 => true                    
 7<4 => false
 8>=8 => true
 9<=7 => false
 5==5 => true
 4!=4 => false

 preco >= 200.50
 idade < 18
 curso == 'Javascript'
 n1 != n2

 Note o seguinte exemplo:

 5 == 5    -> true (Os dois possuem o mesmo valor? Resp. Sim)
 5 == '5'  -> true (Os dois possuem o mesmo valor? Resp. Sim)

 Nesse operador acima não há uma distinção entre number e string. Para executar uma operação relacional que leve em consideração o tipo de variável, pode-se fazer da seguinte forma:

 5 === '5'    ->  false     
 (Os dois são iguais em valores e iguais em tipos? Resp. Não)

 O operador acima chama-se operador de identidade, ou de igualdade restrita. Onde para aparecer true, tanto o valor quanto o tipo devem bater.
 Veja o novo exemplo:

 5 != '5'    -> false   
 (Os dois são diferentes em valores? Resp. Não)

 5 !== '5'   -> true    
 (Os dois são diferentes em valores ou diferentes em tipos? Resp. Sim)

 ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 OPERADORES LÓGICOS

  !  -> Negação
  && -> Conjunção (e)
  || -> Disjunção (ou)

 Exemplo prático:

  Desejo uma caneta de qualquer cor, menos(negação) azul.
    Portanto não fico satisfeito se receber azul

  Quero uma caneta azul e uma vermelha
    Só fico satisfeito se eu receber as duas ao mesmo tempo

  Quero uma caneta azul ou uma vermelha
    Fico satisfeito se apenas receber uma azul, uma vermelha ou as duas ao mesmo tempo.

 Exemplos na programação:

 Negação ou !

  !true -> false
  !false -> true

 Conjução (e) (&&)

  True && True  -> True
  True && False -> False
  False && True -> False
  False && False -> False

Disjunção (ou) (||)

  True && True  -> True
  True && False -> True
  False && True -> True
  False && False -> False

///////////////////////////////////////////////////////////////////////////////////////














 





 

